# Generated by Django 5.2.7 on 2025-10-16 22:24

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TripCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=120, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Siwa', 'Siwa'), ('Fayoum', 'Fayoum'), ('White & Black Desert', 'White & Black Desert'), ('Farafra', 'Farafra'), ('Dakhla', 'Dakhla'), ('Kharga', 'Kharga')], max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
            options={
                'ordering': ['name'],
                'constraints': [models.CheckConstraint(condition=models.Q(('name__in', ['Siwa', 'Fayoum', 'White & Black Desert', 'Farafra', 'Dakhla', 'Kharga'])), name='destination_name_allowed')],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('code', models.CharField(max_length=10)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('name', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('teaser', models.TextField(help_text='Short blurb shown on listing cards.')),
                ('duration_days', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('group_size_max', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('base_price_per_person', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tour_type_label', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='web.destination')),
                ('languages', models.ManyToManyField(blank=True, related_name='trips', to='web.language')),
                ('category_tags', models.ManyToManyField(blank=True, related_name='trips', to='web.tripcategory')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('body', models.TextField()),
                ('author_name', models.CharField(max_length=120)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='web.trip')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('travel_date', models.DateField()),
                ('adults', models.PositiveSmallIntegerField(default=1)),
                ('children', models.PositiveSmallIntegerField(default=0)),
                ('infants', models.PositiveSmallIntegerField(default=0)),
                ('full_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=40)),
                ('special_requests', models.TextField(blank=True)),
                ('base_subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('extras_subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('grand_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to='web.trip')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TripAbout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('trip', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='about', to='web.trip')),
            ],
        ),
        migrations.CreateModel(
            name='TripExclusion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=300)),
                ('position', models.PositiveSmallIntegerField(default=0)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exclusions', to='web.trip')),
            ],
            options={
                'ordering': ['position', 'id'],
            },
        ),
        migrations.CreateModel(
            name='TripExtra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('position', models.PositiveSmallIntegerField(default=0)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extras', to='web.trip')),
            ],
            options={
                'ordering': ['position', 'id'],
            },
        ),
        migrations.CreateModel(
            name='BookingExtra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_at_booking', models.DecimalField(decimal_places=2, max_digits=10)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_extras', to='web.booking')),
                ('extra', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='booked_in', to='web.tripextra')),
            ],
        ),
        migrations.CreateModel(
            name='TripFAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=300)),
                ('answer', models.TextField(blank=True)),
                ('position', models.PositiveSmallIntegerField(default=0)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='web.trip')),
            ],
            options={
                'ordering': ['position', 'id'],
            },
        ),
        migrations.CreateModel(
            name='TripHighlight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=300)),
                ('position', models.PositiveSmallIntegerField(default=0)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='highlights', to='web.trip')),
            ],
            options={
                'ordering': ['position', 'id'],
            },
        ),
        migrations.CreateModel(
            name='TripInclusion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=300)),
                ('position', models.PositiveSmallIntegerField(default=0)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inclusions', to='web.trip')),
            ],
            options={
                'ordering': ['position', 'id'],
            },
        ),
        migrations.CreateModel(
            name='TripItineraryDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_number', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('title', models.CharField(max_length=200)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itinerary_days', to='web.trip')),
            ],
            options={
                'ordering': ['day_number'],
            },
        ),
        migrations.CreateModel(
            name='TripItineraryStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_label', models.CharField(blank=True, max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('position', models.PositiveSmallIntegerField(default=0)),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='web.tripitineraryday')),
            ],
            options={
                'ordering': ['position', 'id'],
            },
        ),
        migrations.CreateModel(
            name='TripRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField(default=0)),
                ('from_trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_to', to='web.trip')),
                ('to_trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_from', to='web.trip')),
            ],
            options={
                'ordering': ['position', 'id'],
            },
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['trip', 'travel_date'], name='web_booking_trip_id_0493a0_idx'),
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['destination'], name='web_trip_destina_172222_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bookingextra',
            unique_together={('booking', 'extra')},
        ),
        migrations.AlterUniqueTogether(
            name='tripitineraryday',
            unique_together={('trip', 'day_number')},
        ),
        migrations.AlterUniqueTogether(
            name='triprelation',
            unique_together={('from_trip', 'to_trip')},
        ),
    ]
